<!DOCTYPE html>
<html>

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Gostations Direction</title>
    <%= Gon::Base.render_data %>
    <style>
     
      html, body {
        height: 100%;
        margin: 50;
        padding: 50;
      }
      #map {
        height: 100%;
        width: 90%;
        margin: auto;
      }

      #directions-panel {
        margin-top: 10px;
        background-color: #FFEE77;
        padding: 10px;
      }
    </style>
  </head>

  <body>
    
    <div class="col-xs-8">
      <input type="text" id="start" placeholder="輸入起點" class= "form-control">
      <br/>
      <input type="text" id="end" placeholder="輸入終點" class="form-control">
      <br/>
    </div>
    <div class="col-xs-2">
      <input id="submit" class="btn btn-default" type="submit" value="Go">
    </div>

    <div>
      <input id="address" type="textbox" placeholder="輸入目的地">
      <input id="submit_single_address" class="btn btn-default" type="button" value="Go">
    </div>

    <div id="map"></div>

    
    <script>
      //var url = 'https://wapi.gogoro.com/tw/api/vm/list';

      var start_address;
      var end_address;
      var start_url;
      var end_url;
      var map;

      function callAjax(url) {
        var xhr_start = new XMLHttpRequest();
        xhr_start.open('get', start_url, true);
        xhr_start.send(null);

        var xhr_end = new XMLHttpRequest();
        xhr_end.open('get', end_url, true);
        xhr_end.send(null);

        xhr_end.onload = function() {
          var record_start = JSON.parse(xhr_start.responseText);
          record_start = record_start.results;

          var record_end = JSON.parse(xhr_end.responseText);
          record_end = record_end.results;
          // --- gostations_belongs_to_trip
          for(var i=0; i<gon.gostations_belongs_to_trip.length; i++){
            var position = {};
            position.lat = gon.gostations_belongs_to_trip[i].Latitude;
            position.lng = gon.gostations_belongs_to_trip[i].Longitude;

            if( checkLatLngInStartEnd(position, record_start[0].geometry.location, record_end[0].geometry.location) ){
              var LocName = gon.gostations_belongs_to_trip[i].LocName;
              var AvailableTime = gon.gostations_belongs_to_trip[i].AvailableTime;
              addMarker({
                coords: position,
                iconImage: 'http://maps.google.com/mapfiles/ms/micons/orange-dot.png',
                content: '<a href="https://www.google.com/maps/dir/Current+Location/'+LocName+'" target="_blank">'+LocName+'</a><br>營業時間：'+AvailableTime
              });
            }
            
          }
          // --- gostations_not_belongs_to_trip
          for(var i=0; i<gon.gostations_not_belongs_to_trip.length; i++){
            var position = {};
            position.lat = gon.gostations_not_belongs_to_trip[i].Latitude;
            position.lng = gon.gostations_not_belongs_to_trip[i].Longitude;

            if( checkLatLngInStartEnd(position, record_start[0].geometry.location, record_end[0].geometry.location) ){
              var LocName = gon.gostations_not_belongs_to_trip[i].LocName;
              var AvailableTime = gon.gostations_not_belongs_to_trip[i].AvailableTime;
              addMarker({
                coords: position,
                iconImage: 'http://maps.google.com/mapfiles/ms/micons/yellow-dot.png',
                content: '<a href="https://www.google.com/maps/dir/Current+Location/'+LocName+'" target="_blank">'+LocName+'</a><br>營業時間：'+AvailableTime
              });
            }
            
          }
        };
      };

      function checkLatLngInStartEnd(position, start, end){
        if( (position.lat >= start.lat && position.lat <= end.lat) || (position.lat <= start.lat && position.lat >= end.lat)){
          if( (position.lng >= start.lng && position.lng <= end.lng) || (position.lng <= start.lng && position.lng >= end.lng)){
              return true;
          }
        }
        return false;
      }

      var infoWindow = null;
      function addMarker(props){
        var marker = new google.maps.Marker({
          position: props.coords,
          map: map,
          icon: props.iconImage
        });

        if(props.content){
          marker.addListener('click', function(){
            if(infoWindow==null){
              infoWindow = new google.maps.InfoWindow();
            }
            infoWindow.setContent(props.content);
            infoWindow.open(map, marker);
          });
        }
      }

      function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        map = new google.maps.Map(document.getElementById('map'), {

          zoom: 10,
          center: {lat: 24.98367, lng: 121.453586}
        });
        directionsDisplay.setMap(map);

        document.getElementById('submit').addEventListener('click', function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
        });

        var geocoder = new google.maps.Geocoder();
        document.getElementById('submit_single_address').addEventListener('click', function() {
          geocodeAddress(geocoder, map);
        });

      }

      function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        geocoder.geocode({'address': address}, function(results, status) {
          if (status === 'OK') {
            resultsMap.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
              map: resultsMap,
              position: results[0].geometry.location
            });
            displayGostationsNearby(address);
          } else {
            alert('Geocode was not successful for the following reason: ' + status);
          }
        });
      }

      function displayGostationsNearby(address) {
        var url = "https://maps.googleapis.com/maps/api/geocode/json?address=" + address +"&key=AIzaSyDBlueY1pKWgE_uhgFbjH8_cO2CjJCERaA";

        var xhr = new XMLHttpRequest();
        xhr.open('get', url, true);
        xhr.send(null);

        xhr.onload = function() {
          var record = JSON.parse(xhr.responseText);
          record = record.results;

          // --- gostations_belongs_to_trip
          for(var i=0; i<gon.gostations_belongs_to_trip.length; i++){
            var position = {};
            position.lat = gon.gostations_belongs_to_trip[i].Latitude;
            position.lng = gon.gostations_belongs_to_trip[i].Longitude;

            if( checkLatLngNearby(position, record[0].geometry.location) ){
              var LocName = gon.gostations_belongs_to_trip[i].LocName;
              var AvailableTime = gon.gostations_belongs_to_trip[i].AvailableTime;
              addMarker({
                coords: position,
                iconImage: 'http://maps.google.com/mapfiles/ms/micons/orange-dot.png',
                content: '<a href="https://www.google.com/maps/dir/Current+Location/'+LocName+'" target="_blank">'+LocName+'</a><br>營業時間：'+AvailableTime
              });
            }
            
          }
          // --- gostations_not_belongs_to_trip
          for(var i=0; i<gon.gostations_not_belongs_to_trip.length; i++){
            var position = {};
            position.lat = gon.gostations_not_belongs_to_trip[i].Latitude;
            position.lng = gon.gostations_not_belongs_to_trip[i].Longitude;

            if( checkLatLngNearby(position, record[0].geometry.location) ){
              var LocName = gon.gostations_not_belongs_to_trip[i].LocName;
              var AvailableTime = gon.gostations_not_belongs_to_trip[i].AvailableTime;
              addMarker({
                coords: position,
                iconImage: 'http://maps.google.com/mapfiles/ms/micons/yellow-dot.png',
                content: '<a href="https://www.google.com/maps/dir/Current+Location/'+LocName+'" target="_blank">'+LocName+'</a><br>營業時間：'+AvailableTime
              });
            }
            
          }
        };
      }

      function checkLatLngNearby(gostation, location) {
        var disTH = 0.01;
        if( gostation.lat <= location.lat+disTH && gostation.lat >= location.lat-disTH ){
          if( gostation.lng <= location.lng+disTH && gostation.lng >= location.lng-disTH ){
            return true;
          }
        }
        return false;
      }

      function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var waypts = [];
        /*
        var checkboxArray = document.getElementById('waypoints');
        for (var i = 0; i < checkboxArray.length; i++) {
          if (checkboxArray.options[i].selected) {
            waypts.push({
              location: checkboxArray[i].value.split('(')[0],
              stopover: true
            });
          }
        }
        */
        start_address = document.getElementById('start').value;
        end_address = document.getElementById('end').value;

        start_url = "https://maps.googleapis.com/maps/api/geocode/json?address=" + start_address +"&key=AIzaSyDBlueY1pKWgE_uhgFbjH8_cO2CjJCERaA";
        end_url = "https://maps.googleapis.com/maps/api/geocode/json?address=" + end_address +"&key=AIzaSyDBlueY1pKWgE_uhgFbjH8_cO2CjJCERaA";

        directionsService.route({
          origin: document.getElementById('start').value,
          destination: document.getElementById('end').value,
          waypoints: waypts,
          optimizeWaypoints: true,
          travelMode: 'DRIVING'
        }, function(response, status) {
          if (status === 'OK') {
            callAjax();
            directionsDisplay.setDirections(response);
            /*
            var route = response.routes[0];
            var summaryPanel = document.getElementById('directions-panel');
            summaryPanel.innerHTML = '';
            // For each route, display summary information.
            for (var i = 0; i < route.legs.length; i++) {
              var routeSegment = i + 1;
              summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                  '</b><br>';
              summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
              summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
              summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
            }
            */
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDBlueY1pKWgE_uhgFbjH8_cO2CjJCERaA&callback=initMap">
    </script>

  </body>

</html>