<!DOCTYPE html>
<html>

  <head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Gostations Direction</title>
    <%= Gon::Base.render_data %>
    <style>

      /* The side navigation menu */
      .sidenav {
          height: 100%; /* 100% Full-height */
          width: 0; /* 0 width - change this with JavaScript */
          position: fixed; /* Stay in place */
          z-index: 1; /* Stay on top */
          top: 0; /* Stay at the top */
          left: 0;
          background-color: white;/*#111; /* Black*/
          overflow-x: hidden; /* Disable horizontal scroll */
          padding-top: 60px; /* Place content 60px from the top */
          transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
          color:#888888;
      }

      /* The navigation menu links */
      .sidenav a {
          padding: 8px 8px 8px 32px;
          text-decoration: none;
          font-size: 25px;
          display: block;
          transition: 0.3s;
          color:#818181;
      }



      /* When you mouse over the navigation links, change their color */
      .sidenav a:hover {
          color: #f1f1f1;
      }

      /* Position and style the close button (top right corner) */
      .sidenav .closebtn {
          position: absolute;
          top: 0;
          right: 25px;
          font-size: 36px;
          margin-left: 50px;
      }
      .mysidenav{
        padding: 0 20%;
        font-size:1.5em;
        line-height: 1em;
      }
      /* Style page content - use this if you want to push the page content to the right when you open the side navigation */
      #main {
          transition: margin-left .5s;
          padding: 20px;
      }

      /* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */
      @media screen and (max-height: 450px) {
          .sidenav {padding-top: 15px;}
          .sidenav a {font-size: 18px;}
      }
     
      html, body {
        height: 100%;
        margin: 50;
        padding: 50;
      }

      #map {
        height: 80%;
        width: 90%;
        margin: auto;
        border-radius: 10px;
      }


      #directions-panel {
        margin-top: 10px;
        background-color: #FFEE77;
        padding: 10px;
      }
    </style>
  </head>

  <body class="background">

    <div id="mySidenav" class="sidenav">
      <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
      <div id="mySidenav-content" class="mysidenav">
        <div id="mysidenav-img"></div>
        <div id="mysidenav-content"></div>
        <div id="mysidenav-disdur"></div>
        <div id="mysidenav-button"></div>
        <div id="mysidenav-tripurl"></div>
        <div id="mysidenav-directionurl"></div>
      </div>
    </div>
    <br/>
    <div class="col-xs-8 col-xs-offset-1">
      <!--
      <input type="text" id="start" placeholder="輸入起點" class= "form-control">
      <br/>
      -->
      <input type="text" id="end" placeholder="你想去哪裡？" class="form-control">
      <br/>
    </div>
    <div class="col-xs-2">
      <input id="submit" class="btn btn-default" type="submit" value="Go">
      <!--
      <div id=directions-panel>
      </div>
      -->
    </div>

    <div id="map"></div>
    
    <script>


      var googleMapStyle = [
        {
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#f5f5f5"
            }
          ]
        },
        {
          "elementType": "labels.icon",
          "stylers": [
            {
              "visibility": "off"
            }
          ]
        },
        {
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#616161"
            }
          ]
        },
        {
          "elementType": "labels.text.stroke",
          "stylers": [
            {
              "color": "#f5f5f5"
            }
          ]
        },
        {
          "featureType": "administrative.land_parcel",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#bdbdbd"
            }
          ]
        },
        {
          "featureType": "poi",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#eeeeee"
            }
          ]
        },
        {
          "featureType": "poi",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#757575"
            }
          ]
        },
        {
          "featureType": "poi.park",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#e5e5e5"
            }
          ]
        },
        {
          "featureType": "poi.park",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#9e9e9e"
            }
          ]
        },
        {
          "featureType": "road",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#ffffff"
            }
          ]
        },
        {
          "featureType": "road.arterial",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#757575"
            }
          ]
        },
        {
          "featureType": "road.highway",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#dadada"
            }
          ]
        },
        {
          "featureType": "road.highway",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#616161"
            }
          ]
        },
        {
          "featureType": "road.local",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#9e9e9e"
            }
          ]
        },
        {
          "featureType": "transit.line",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#e5e5e5"
            }
          ]
        },
        {
          "featureType": "transit.station",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#eeeeee"
            }
          ]
        },
        {
          "featureType": "water",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#c9c9c9"
            }
          ]
        },
        {
          "featureType": "water",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#9e9e9e"
            }
          ]
        }
      ];

      /* Set the width of the side navigation to 400px */
      function openNav(content, storePhoto, button, trip_url, directions_url, results) {
          document.getElementById("mySidenav").style.width = "400px";
          var mySidenavContent = document.getElementById('mySidenav-content');

          document.getElementById('mysidenav-img').innerHTML = storePhoto;
          document.getElementById('mysidenav-content').innerHTML = content;
          if(results.status){
            document.getElementById('mysidenav-disdur').innerHTML = results.distance+' '+results.duration;
          }
          document.getElementById('mysidenav-button').innerHTML = button;
          document.getElementById('mysidenav-tripurl').innerHTML = trip_url;
          document.getElementById('mysidenav-directionurl').innerHTML = directions_url;
      }

      /* Set the width of the side navigation to 0 */
      function closeNav() {
          document.getElementById("mySidenav").style.width = "0";
      }

      var userCurrentPos = {
        lat: 0.0,
        lng: 0.0
      };

      var map = null;
      var directionsService = null;
      var directionsDisplay = null;

      // map icons
      var i_black_battery = null;
      var i_green_black_battery = null;
      var i_blue_black_battery = null;
      var ig_black_battery = null;
      var ig_green_black_battery = null;
      var ig_blue_black_battery = null;
      var friendly_store_icon = null;

      function displayGostations(route) {
        // --- create milestones
        var milestones = createMilestone(route, 1000);

        // --- gostations_belongs_to_trip
        setStartEndInfobox(gon.gostations_belongs_to_trip,
                           true,
                           milestones,
                           i_green_black_battery);

        // --- gostations_not_belongs_to_trip
        setStartEndInfobox(gon.gostations_not_belongs_to_trip,
                           false,
                           milestones,
                           i_black_battery);
      };

      function getTripId(gostation_id){
        for(var i=0; i<gon.trip_gostations.length; i++){
          if(gon.trip_gostations[i].gostation_id == gostation_id){
            return gon.trip_gostations[i].trip_id;
          }
        }
        return -1;
      }

      function getGostationInfo(gostation){
        var LocName = gostation.LocName;
        var Address = gostation.Address;
        var AvailableTime = gostation.AvailableTime;
        var tripId = getTripId(gostation.id);
        var StorePhoto = gostation.StorePhoto;
        var BatteryCells = gostation.BatteryCells;
        var FullBatteryCells = (Math.floor(Math.random()*(BatteryCells/8-1))+1)*8;
        return {
          directions_url: '<a style="color:#FFFFFF;" class="btn btn-success" href="https://www.google.com/maps/dir/Current+Location/'+gostation.Latitude+','+gostation.Longitude+'" target="_blank">導航</a><br>',

          StorePhoto: gostation.StorePhoto,

          trip_url: tripId >= 0 ? '<a class="btn btn-primary" rel="nofollow" data-method="get" href="/trips/'+tripId+'">挑戰任務</a><br>' : '<a class="btn btn-default">挑戰任務</a><br>',

          infoWindowContent: '<div>站名：'+LocName+'</div><br>'
            +'<div>地址：'+Address+'</div><br>'
            +'<div>營業時間：'+AvailableTime+'</div><br>'
            +'<div>滿電電池：'+FullBatteryCells+'/'+BatteryCells+'</div><br>',

          storePhoto: '<img src="'+StorePhoto+'" alt="Store Photo" width="400" height="400"><br>'
        };
      }

      function setStartEndInfobox(gostations, bBelongsToTrip, milestones, img){
        for(var i=0; i<gostations.length; i++){
          var position = {};
          position.lat = gostations[i].Latitude;
          position.lng = gostations[i].Longitude;

          var flag = false;
          for(var j=0; j<milestones.length; j++){
            if( checkLatLngNearby(position, milestones[j]) ){
              flag = true;
              break;
            }
          }
          if( flag ){

            var gostationInfo = getGostationInfo(gostations[i]);

            addMarker({
              coords: position,
              iconImage: img,
              content: gostationInfo.infoWindowContent,
              storePhoto: gostationInfo.storePhoto,
              directions_url: gostationInfo.directions_url,
              id: gostations[i].id,
              trip_url: gostationInfo.trip_url,
              bBelongsToTrip: bBelongsToTrip
            });
          }
        }
      }

      function checkLatLngInStartEndRect(position, start, end){
        if(start.lat==0.0 && start.lng==0.0){
          return checkLatLngNearby(gostation, end);
        }

        if( (position.lat >= start.lat && position.lat <= end.lat) || (position.lat <= start.lat && position.lat >= end.lat)){
          if( (position.lng >= start.lng && position.lng <= end.lng) || (position.lng <= start.lng && position.lng >= end.lng)){
              return true;
          }
        }
        return false;
      }

      function calculateDisDur(des){
        var results = {
          distance: '0.0',
          duration: '0.0',
          status: false
        }
        if(userCurrentPos.lat==0.0 && userCurrentPos.lng==0.0){
          return results;
        }
        var directionsServiceCalc = new google.maps.DirectionsService;
        //var start = userCurrentPos.lat+','+userCurrentPos.lng;
        //var end = des.lat+','+des.lng;
        var start = new google.maps.LatLng(userCurrentPos.lat, userCurrentPos.lng);
        var end = new google.maps.LatLng(des.lat, des.lng);
        //var start = '37.7683909618184, -122.51089453697205';
        //var end = '41.850033, -87.6500523';
        directionsServiceCalc.route({
          origin: start,
          destination: end,
          travelMode: 'DRIVING',
          avoidHighways: true
        }, function(response, status) {
          if (status === 'OK') {
            results.distance = response.routes[0].legs[0].distance.text;
            results.duration = response.routes[0].legs[0].duration.text;
            results.status = true;
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });

        return results;
      }

      var currentGostationId = 0;
      function toggle(){
        $.ajaxSetup({
          headers: { 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content') }
        });
        $.ajax({
          url: "/gostations/"+currentGostationId+"/getCheckinStatus",
          method: "POST",
          dataType: "json",
          success: function(data){
            if(data.status){
              document.getElementById("mysidenav-button").innerHTML = '<a class="btn btn-primary" rel="nofollow" data-method="post" onclick="toggle()" href="/gostations/'+currentGostationId+'/checkin">Checkin</a><br>';
            }
            else{
              document.getElementById("mysidenav-button").innerHTML = '<a class="btn btn-info" rel="nofollow" data-method="post" onclick="toggle()" href="/gostations/'+currentGostationId+'/uncheckin">Unheckin</a><br>'; 
            }
          },

          error: function() {
            alert("ERROR: can not getCheckinStatus!");
          }

        });

      }

      var activeMarkerInfo = {
        marker: null,
        bBelongsToTrip: false
      };
      function addMarker(props){
        var marker = new google.maps.Marker({
          position: props.coords,
          animation: google.maps.Animation.DROP,
          map: map,
          icon: props.iconImage
        });

        if(props.content){
          marker.addListener('click', function(){
            currentGostationId = props.id;

            if(activeMarkerInfo.marker!=null){
              if(activeMarkerInfo.bBelongsToTrip){
                activeMarkerInfo.marker.setIcon(i_green_black_battery);
              }
              else{
                activeMarkerInfo.marker.setIcon(i_black_battery);
              }
            }
            if(props.bBelongsToTrip){
              marker.setIcon(ig_green_black_battery);
            }
            else{
              marker.setIcon(ig_black_battery);
            }
            activeMarkerInfo.marker = marker;
            activeMarkerInfo.bBelongsToTrip = props.bBelongsToTrip;

            var results = calculateDisDur(props.coords);

            var checkin_button = '<a class="btn btn-default">Checkin</a><br>';
            var uncheckin_button = '<a class="btn btn-default">Uncheckin</a><br>';

            var checkinDisTH = 0.005;//0.005 = 500m
            if( Math.sqrt( (userCurrentPos.lat-props.coords.lat)*(userCurrentPos.lat-props.coords.lat) + (userCurrentPos.lng-props.coords.lng)*(userCurrentPos.lng-props.coords.lng) ) < checkinDisTH )
            {
              checkin_button = '<a class="btn btn-primary" rel="nofollow" data-method="post" onclick="toggle()" href="/gostations/'+props.id+'/checkin">Checkin</a><br>';

              uncheckin_button = '<a class="btn btn-info" rel="nofollow" data-method="post" onclick="toggle()" href="/gostations/'+props.id+'/uncheckin">Uncheckin</a><br>';
            }

            $.ajaxSetup({
              headers: { 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content') }
            });
            $.ajax({
              url: "/gostations/"+props.id+"/getCheckinStatus",
              method: "POST",
              dataType: "json",
              success: function(data){

                if(data.status){
                  openNav(props.content, props.storePhoto, uncheckin_button, props.trip_url, props.directions_url, results);
                }
                else{
                  openNav(props.content, props.storePhoto, checkin_button, props.trip_url, props.directions_url, results);
                }
              },

              error: function() {
                alert("ERROR: can not getCheckinStatus!");
              }

            });
          });
        }
      }

      function clearMap(directionsDisplay){
        directionsDisplay.setMap(null);
      }

      function displayFriendlyStores(){
        for(var i=0; i<gon.friendly_stores.length; i++){
          var position = {
            lat: gon.friendly_stores[i].latitude,
            lng: gon.friendly_stores[i].longitude
          };

          var infoWindowContent = '<div>商店名稱：'+gon.friendly_stores[i].name+'</div><br>'
            +'<div>地址：'+gon.friendly_stores[i].address+'</div><br>'
            +'<div>營業時間：'+gon.friendly_stores[i].open_time+'</div><br>';

          var directions_url = '<a class="btn btn-primary" href="https://www.google.com/maps/dir/Current+Location/'+position.lat+','+position.lng+'" target="_blank">導航</a><br>';

          addMarker({
            coords: position,
            iconImage: friendly_store_icon,
            content: infoWindowContent,
            storePhoto: gon.friendly_stores[i].main_photo,
            directions_url: directions_url,
            id: 0
          });
        }
      }

      function initMap() {
        directionsService = new google.maps.DirectionsService;
        directionsDisplay = new google.maps.DirectionsRenderer;
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 7.6,
          center: {lat: 23.91566, lng: 120.66387},
          styles: googleMapStyle,
          // specify map controls
          minZoom: 7,
          maxZoom: 18,
          mapTypeControl: false,
          fullscreenControl: false,
          streetViewControl: false,
          zoomControl: false
        });

        i_black_battery = {
          url: "icons/i_black_battery.png",
          scaledSize: new google.maps.Size(28, 32)
        };

        ig_black_battery = {
          url: "icons/ig_black_battery.png",
          scaledSize: new google.maps.Size(42, 48)
        };

        i_green_black_battery = {
          url: "icons/i_green_black_battery.png",
          scaledSize: new google.maps.Size(28, 32)
        };

        ig_green_black_battery = {
          url: "icons/ig_green_black_battery.png",
          scaledSize: new google.maps.Size(42, 48)
        };

        friendly_store_icon = {
          url: "icons/shop.png",
          scaledSize: new google.maps.Size(28, 32)
        };

        directionsDisplay.setMap(map);

        //displayFriendlyStores();

        // find current position of user
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            userCurrentPos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            map.setZoom(12);
            map.setCenter(userCurrentPos);
            addMarker({
              coords: userCurrentPos,
              iconImage: 'http://maps.google.com/mapfiles/ms/micons/blue.png'
            });

            // --- gostations_belongs_to_trip
            setNearbyInfobox(gon.gostations_belongs_to_trip,
                             true,
                             userCurrentPos,
                             i_green_black_battery);

            // --- gostations_not_belongs_to_trip
            setNearbyInfobox(gon.gostations_not_belongs_to_trip,
                             false,
                             userCurrentPos,
                             i_black_battery);

          }, function() {
            alert('can not get current position in 2 sec！');
          }//,
            //{maximumAge: 0, timeout: 2000, enableHighAccuracy:false}
          );
        } else {
          alert('Browser does not support Geolocation');
        }

        document.getElementById('submit').addEventListener('click', function() {
          if( userCurrentPos.lat!=0.0 && userCurrentPos.lng!=0.0 ){
            calculateAndDisplayRoute(directionsService, directionsDisplay);
          }
          else{
            var geocoder = new google.maps.Geocoder();
            geocodeAddress(geocoder, map);
          }
        });

      }

      function geocodeAddress(geocoder, map) {
        var address = document.getElementById('end').value;
        geocoder.geocode({'address': address}, function(results, status) {
          if (status === 'OK') {
            map.setZoom(12);
            map.setCenter(results[0].geometry.location);
            displayGostationsNearby(address);
            addMarker({
              coords: results[0].geometry.location,
              iconImage: 'http://maps.google.com/mapfiles/ms/micons/red.png'
            });
          } else {
            alert('Geocode was not successful for the following reason: ' + status);
          }
        });
      }


      function setNearbyInfobox(gostations, bBelongsToTrip, des, img) {
        for(var i=0; i<gostations.length; i++){
          var position = {};
          position.lat = gostations[i].Latitude;
          position.lng = gostations[i].Longitude;

          if( checkLatLngNearby(position, des) ){
            var gostationInfo = getGostationInfo(gostations[i]);

            addMarker({
              coords: position,
              iconImage: img,
              content: gostationInfo.infoWindowContent,
              storePhoto: gostationInfo.storePhoto,
              directions_url: gostationInfo.directions_url,
              id: gostations[i].id,
              trip_url: gostationInfo.trip_url,
              bBelongsToTrip: bBelongsToTrip
            });
          }
          
        }
      }


      function displayGostationsNearby(address) {
        var url = "https://maps.googleapis.com/maps/api/geocode/json?address=" + address +"&key=AIzaSyDBlueY1pKWgE_uhgFbjH8_cO2CjJCERaA";

        var xhr = new XMLHttpRequest();
        xhr.open('get', url, true);
        xhr.send(null);

        xhr.onload = function() {
          var record = JSON.parse(xhr.responseText);
          record = record.results;

          // --- gostations_belongs_to_trip
          setNearbyInfobox(gon.gostations_belongs_to_trip,
                           true,
                           record[0].geometry.location,
                           i_green_black_battery);

          // --- gostations_not_belongs_to_trip
          setNearbyInfobox(gon.gostations_not_belongs_to_trip,
                           false,
                           record[0].geometry.location,
                           i_black_battery);
        };
      }

      function checkLatLngNearby(gostation, location) {
        var nearbyDisTH = 0.02;//0.01 = 1km

        var a = (gostation.lat-location.lat)*(gostation.lat-location.lat);
        var b = (gostation.lng-location.lng)*(gostation.lng-location.lng);

        if( Math.sqrt(a+b) < nearbyDisTH ){
          return true;
        }
        return false;
      }

      function createMilestone(route, dist){
        var milestones = [];
        var opts = {
          map: map,
          icon: 'http://labs.google.com/ridefinder/images/mm_20_red.png'
        };

        var markers=[],
            geo = google.maps.geometry.spherical,
            path = route.overview_path,
            point = path[0],
            distance = 0,
            leg,
            overflow,
            pos;
                  
        for(var p=1;p<path.length;++p){ 
          leg=Math.round(geo.computeDistanceBetween(point,path[p]));
          d1=distance+0
          distance+=leg;        
          overflow=dist-(d1%dist);
          
          if(distance>=dist && leg>=overflow){
            if(overflow && leg>=overflow){ 
              pos=geo.computeOffset(point,overflow,geo.computeHeading(point,path[p]));
              opts.position=pos;
              //markers.push(new google.maps.Marker(opts));
              milestones.push({lat: pos.lat(), lng: pos.lng()});
              distance-=dist;
            }
            
            while(distance>=dist){ 
              pos=geo.computeOffset(point,dist+overflow,geo.computeHeading(point,path[p]));
              opts.position=pos;
              //markers.push(new google.maps.Marker(opts));
              milestones.push({lat: pos.lat(), lng: pos.lng()});
              distance-=dist;
            }
          }
          point=path[p];
        }

        return milestones;    
      }
      
      function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var start = '';
        if((userCurrentPos.lat!=0.0 && userCurrentPos.lng!=0.0)){
          start = new google.maps.LatLng(userCurrentPos.lat, userCurrentPos.lng);
        }
        directionsService.route({
          origin: start,
          destination: document.getElementById('end').value,
          travelMode: 'DRIVING',
          avoidHighways: true
        }, function(response, status) {
          if (status === 'OK') {
            var start_location = {
              lat: response.routes[0].legs[0].start_location.lat(),
              lng: response.routes[0].legs[0].start_location.lng()
            };

            var end_location = {
              lat: response.routes[0].legs[0].end_location.lat(),
              lng: response.routes[0].legs[0].end_location.lng()
            };

            displayGostations(response.routes[0]);
            /*
            var summaryPanel = document.getElementById('directions-panel');
            summaryPanel.innerHTML  = '距離：'+response.routes[0].legs[0].distance.text;
            summaryPanel.innerHTML += '<br>'
            summaryPanel.innerHTML += '時間：'+response.routes[0].legs[0].duration.text;
            */

            directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });

      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDBlueY1pKWgE_uhgFbjH8_cO2CjJCERaA&callback=initMap&language=zh-TW">
    </script>

  </body>

</html>